pipeline {
    options { timestamps() }
    agent none

    // triggers {
    //     pollSCM('H/10 * * * *')
    //     cron('H/15 * * * *')
    // }

    stages {
        stage('Check scm') {
            agent any
            steps {
                checkout scm
            }
        } 
        stage('Build') {
            steps {
                echo "Building ...${BUILD_NUMBER}"
                echo "Build completed"
            }
        } 
        stage('Test') {
            agent { 
                docker { 
                    image 'python:3.12-alpine' 
                    args '-u root'
                } 
            }
            steps {
                sh 'apk add --no-cache py3-pip'
                sh 'pip install unittest-xml-reporting'
                sh 'python lab4/test_pawnshop.py'
            }
            post {
                always {
                    junit 'lab4/results.xml'
                }
                success {
                    echo "Application testing successfully completed"
                }
                failure {
                    echo "Oooppss!!! Tests failed!"
                }
            }
        }
        stage('Build Docker Image') {
            agent any
            steps {
                script {
                    // Створюємо Docker image з Dockerfile
                    dockerImage = docker.build("pawnsopApp:${BUILD_NUMBER}", "-f lab4/Dockerfile .")
                }
            }
        }
        stage('Push Docker Image to Docker Hub') {
            agent any
            steps {
                script {
                    // Використання Jenkins credentials для автентифікації в Docker Hub
                    docker.withRegistry('https://index.docker.io/v1/', 'docker_token') {
                        // Завантаження образу на Docker Hub
                        dockerImage.push("${BUILD_NUMBER}")
                        dockerImage.push("latest")
                    }
                }
            }
        }
    }
}
 