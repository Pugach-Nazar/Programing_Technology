pipeline {
    options { timestamps() }
    agent none

    stages {
        stage('Check scm') {
            agent any
            steps {
                checkout scm
            }
        } 
        stage('Build') {
            steps {
                echo "Building ...${BUILD_NUMBER}"
                echo "Build completed"
            }
        } 
        stage('Test') {
            agent { 
                docker { 
                    image 'python:3.12-alpine' 
                    args '-u root'
                } 
            }
            steps {
                sh 'apk add --no-cache py3-pip'
                sh 'pip install unittest-xml-reporting'
                sh 'python lab4/test_pawnshop.py'
            }
            post {
                always {
                    junit 'lab4/results.xml'
                }
                success {
                    echo "Application testing successfully completed"
                }
                failure {
                    echo "Oooppss!!! Tests failed!"
                }
            }
        }
        stage('Build Image') {
            agent any
            steps {
                script {
                    dockerImage = docker.build("pawnshopapp:${BUILD_NUMBER}", "-f lab4/Dockerfile .")
                }
            }
        }
        stage('Push Image to Docker Hub') {
            agent any
            steps {
                script {
                    // Зберігаємо токен у змінній середовища
                    def dockerToken = credentials('docker_token')

                    // Використання командного рядка для аутентифікації та публікації
                    sh """
                    echo "${dockerToken}" | docker login --username qwertyasd0933 --password-stdin
                    docker push qwertyasd0933/pawnshopapp:${BUILD_NUMBER}
                    docker push qwertyasd0933/pawnshopapp:latest
                    """
                }
            }
        }
    }
}
